AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AvailableToPromise API
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
Parameters:
  StageName:
    Description: stage / alias name to be used in this deploy
    Type: String
    AllowedValues:
      - Prod
      - UAT
      - Dev
    Default: Dev
Conditions:
  CreatePRODResources: !Equals [!Ref StageName, Prod]
  CreateUATResources: !Equals [!Ref StageName, UAT]
  CreateDevResources: !Equals [!Ref StageName, Dev]
  CreateEastResources: !Equals [!Ref "AWS::Region", us-east-1]
  CreateWestResources: !Equals [!Ref "AWS::Region", us-west-1]
Mappings:
  EastRegEnvMap: 
    Dev: 
      DAXENDPOINT: daxs://dax-api-cluster-dev.x2sy7j.dax-clusters.us-east-1.amazonaws.com
      POLICYDAXRESOURCE: "arn:aws:dax:us-east-1:203315843709:cache/dax-api-cluster-dev"
      #POLICYDDBRESOURCE: ["arn:aws:dynamodb:us-east-1:203315843709:table/TST_CONNS_LOCATION"]
    UAT: 
      DAXENDPOINT: daxs://dax-api-cluster-uat.x2sy7j.dax-clusters.us-east-1.amazonaws.com 
      POLICYDAXRESOURCE: "arn:aws:dax:us-east-1:203315843709:cache/dax-api-cluster-uat"
      #POLICYDDBRESOURCE: ["arn:aws:dynamodb:us-east-1:203315843709:table/UAT_CONNS_LOCATION"]
    Prod: 
      DAXENDPOINT: daxs://dax-api-cluster-prd.x2sy7j.dax-clusters.us-east-1.amazonaws.com 
      POLICYDAXRESOURCE: "arn:aws:dax:us-east-1:203315843709:cache/dax-api-cluster-prd"
      #POLICYDDBRESOURCE: ["arn:aws:dynamodb:us-east-1:203315843709:table/PRD_CONNS_LOCATION"]
  WestRegEnvMap: 
    Dev: 
      DAXENDPOINT: daxs://dax-api-cluster-dev.8hlusu.dax-clusters.us-west-1.amazonaws.com #daxs://inventorytestcluster.yprieo.dax-clusters.us-west-1.amazonaws.com  
      POLICYDAXRESOURCE: "arn:aws:dax:us-west-1:203315843709:cache/dax-api-cluster-dev"
      #POLICYDDBRESOURCE: ["arn:aws:dynamodb:us-west-1:203315843709:table/TST_CONNS_LOCATION"]
    UAT: 
      DAXENDPOINT: daxs://dax-api-cluster-uat.8hlusu.dax-clusters.us-west-1.amazonaws.com #daxs://inventorytestcluster.yprieo.dax-clusters.us-west-1.amazonaws.com  
      POLICYDAXRESOURCE: "arn:aws:dax:us-west-1:203315843709:cache/dax-api-cluster-uat"
      #POLICYDDBRESOURCE: ["arn:aws:dynamodb:us-west-1:203315843709:table/UAT_CONNS_LOCATION"]
    Prod: 
      DAXENDPOINT: daxs://dax-api-cluster-dev.8hlusu.dax-clusters.us-west-1.amazonaws.com #daxs://inventorytestcluster.yprieo.dax-clusters.us-west-1.amazonaws.com  
      POLICYDAXRESOURCE: "arn:aws:dax:us-west-1:203315843709:cache/dax-api-cluster-dev"
      #POLICYDDBRESOURCE: ["arn:aws:dynamodb:us-west-1:203315843709:table/TST_CONNS_LOCATION"]
  EnvMap: 
    Dev: 
      FUNMEMORYSIZE: 5120
      INVENTORYFUN: InventoryApi-Dev
      DDFUN: DeliveryDateApi-Dev
      GEOLOCATIONFUN: GeoLocationApi-Dev
      LOCATIONTABLE: TST_CONNS_LOCATION
      PROVISIONEDCONCURRECY: 1
    UAT: 
      FUNMEMORYSIZE: 5120
      INVENTORYFUN: InventoryApi-UAT
      DDFUN: DeliveryDateApi-UAT
      GEOLOCATIONFUN: GeoLocationApi-UAT
      LOCATIONTABLE: UAT_CONNS_LOCATION
      PROVISIONEDCONCURRECY: 1
    Prod: 
      FUNMEMORYSIZE: 5120
      INVENTORYFUN: InventoryApi-Prod
      DDFUN: DeliveryDateApi-Prod
      GEOLOCATIONFUN: GeoLocationApi-Prod
      LOCATIONTABLE: PRD_CONNS_LOCATION
      PROVISIONEDCONCURRECY: 2
  RegionMap: 
    us-east-1: 
      SECURITYGROUPID: [sg-08b41ec1af2f1a000]
      SUBNETID: [subnet-09b75b10749852dca,subnet-09eb2858dd51a7a65, subnet-0548df04e14dea60d]
    us-west-1: 
      SECURITYGROUPID: [sg-0e0ce71dd334a2251]
      SUBNETID: [subnet-039b1a40fc66260b3,subnet-0a90d1ee750bfa736]
Resources:
  AvailableToPromiseFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Join [ "-", [AvailableToPromiseApi, !Ref StageName] ]  #!Join [ ":", [ a, b, c ] ]
      Description: AvailableToPromise API function Region.
      CodeUri: 
      Handler: com.conns.lambda.api.atp.AvailableToPromiseHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        ProvisionedConcurrentExecutions: !FindInMap [EnvMap, !Ref StageName, PROVISIONEDCONCURRECY]
      Policies:   
      - LambdaInvokePolicy:
          FunctionName: !FindInMap
                          - EnvMap
                          - !Ref StageName
                          - INVENTORYFUN
      - LambdaInvokePolicy:
          FunctionName: !FindInMap
                          - EnvMap
                          - !Ref StageName
                          - DDFUN
      - LambdaInvokePolicy:
          FunctionName: !FindInMap
                          - EnvMap
                          - !Ref StageName
                          - GEOLOCATIONFUN
      VpcConfig:
        SecurityGroupIds: !FindInMap [RegionMap, !Ref "AWS::Region", SECURITYGROUPID]
        SubnetIds: !FindInMap [RegionMap, !Ref "AWS::Region", SUBNETID]
      MemorySize: !FindInMap
            - EnvMap
            - !Ref StageName
            - FUNMEMORYSIZE
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          VERSION: 1.0
          RESTART: 1.0  # Change this value at runtime to force restart
          LOG_LEVEL: DEBUG
          DISTANCETHRESHOLD: 75
          INVENTORYFUN: !FindInMap
            - EnvMap
            - !Ref StageName
            - INVENTORYFUN
          DDFUN: !FindInMap
            - EnvMap
            - !Ref StageName
            - DDFUN
          GEOLOCATIONFUN: !FindInMap
            - EnvMap
            - !Ref StageName
            - GEOLOCATIONFUN
          DAXENDPOINT:  !If [CreateEastResources, !FindInMap [EastRegEnvMap, !Ref StageName, DAXENDPOINT], !FindInMap [WestRegEnvMap, !Ref StageName, DAXENDPOINT]]